<?php

namespace GFPDF\Plugins\BulkGenerator\Model;

use GFPDF\Plugins\BulkGenerator\Utility\FilesystemHelper;
use League\Flysystem\Filesystem;
use League\Flysystem\Memory\MemoryAdapter;

class PdfTest extends \WP_UnitTestCase {

	protected $class;
	protected $filesystem;

	private $form_id;
	private $entry;

	public function setUp() {
		$this->form_id = \GFAPI::add_form( json_decode( file_get_contents( __DIR__ . '/../../json/sample.json' ), true ) );

		\GFAPI::get_form( $this->form_id );

		$entry_id = \GFAPI::add_entry( [
			'form_id'  => $this->form_id,
			'currency' => 'USD',
			'1'        => 'Sample',
		] );

		$this->entry = \GFAPI::get_entry( $entry_id );

		$this->filesystem = new Filesystem( new MemoryAdapter() );

		parent::setUp(); // TODO: Change the autogenerated stub
	}

	public function test_fetch_pdf_settings() {
		$class = new Pdf( $this->entry['form_id'], '5e7bfc55b6ec9' );

		$class->fetch();

		$this->assertNotEmpty( $class->get_all_settings() );
		$this->assertTrue( $class->has_setting( 'active' ) );
		$this->assertNotEmpty( $class->evaluate_active() );
		$this->assertNotEmpty( $class->evaluate_conditional_logic( $this->entry ) );

		$this->config();
		$data = $this->class->generate( $this->entry['id'] );
		$this->assertNotEmpty( $data );
		$this->assertNotEmpty( $class->get_path() );
		$this->assertNotEmpty( $class->put( $this->filesystem, '\'/\'' ) );

	}

	public function config() {
		add_filter( 'gfpdf_mpdf_class_config', function( $config ) {
			$config['mode']          = 'c';
			$config['biDirectional'] = false;

			return $config;
		} );
	}

}
